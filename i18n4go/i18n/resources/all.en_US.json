[
   {
      "id": "\nSomething completely unexpected happened. This is a bug in %s.\nPlease file this bug : https://github.com/maximilien/i18n4go/issues\nTell us that you ran this command:\n\n\t%s\n\nthis error occurred:\n\n\t%s\n\nand this stack trace:\n\n%s\n\t",
      "translation": "\nSomething completely unexpected happened. This is a bug in %s.\nPlease file this bug : https://github.com/maximilien/i18n4go/issues\nTell us that you ran this command:\n\n\t%s\n\nthis error occurred:\n\n\t%s\n\nand this stack trace:\n\n%s\n\t",
      "modified": false
   },
   {
      "id": "\nusage: i18n4go -c extract-strings [-vpe] [--dry-run] [--output-flat|--output-match-package|-o <outputDir>] -f <fileName>\n   or: i18n4go -c extract-strings [-vpe] [--dry-run] [--output-flat|--output-match-package|-o <outputDir>] -d <dirName> [-r] [--ignore-regexp <fileNameRegexp>]\n\nusage: i18n4go -c rewrite-package [-v] [-r] -d <dirName> [--i18n-strings-filename <fileName> | --i18n-strings-dirname <dirName>] [--init-code-snippet-filename <fileName>] [--ignore-regexp <fileNameRegexp>]\n   or: i18n4go -c rewrite-package [-v] [-r] -f <fileName> --i18n-strings-filename <fileName> [--init-code-snippet-filename <fileName>] [--ignore-regexp <fileNameRegexp>]\n\nusage: i18n4go -c create-translations [-v] [--google-translate-api-key <api key>] [--source-language <language>] -f <fileName> --languages <lang1,lang2,...> -o <outputDir>\n\nusage: i18n4go -c merge-strings [-v] [-r] [--source-language <language>] -d <dirName>\n\nusage: i18n4go -c verify-strings [-v] [--source-language <language>] -f <sourceFileName> --language-files <language files> [-o <outputDir>]\n   or: i18n4go -c verify-strings [-v] [--source-language <language>] -f <sourceFileName> --languages <lang1,lang2,...> [-o <outputDir>]\n\nusage: i18n4go -c show-missing-strings [-v] -d <dirName> --i18n-strings-filename <language file>\n\nusage: i18n4go -c checkup\n\n  -h | --help                prints the usage\n  -v                         verbose\n\n  EXTRACT-STRINGS:\n\n  -c extract-strings         the extract strings command\n\n  --po                       to generate standard .po files for translation\n  -e                         [optional] the JSON file with strings to be excluded, defaults to excluded.json if present\n\t-s\t\t\t\t\t\t\t\t\t\t\t\t [optional] the JSON file with regexp that specify a capturing group to be extracted instead of the full string matching the regexp\n  --meta                     [optional] create a *.extracted.json file with metadata such as: filename, directory, and positions of the strings in source file\n  --dry-run                  [optional] prevents any output files from being created\n\n\n  --output-flat              generated files are created in the specified output directory (default)\n  --output-match-package     generated files are created in directory to match the package name\n  -o                         the output directory where the translation files will be placed\n\n  -f                         the go file name to extract strings\n\n  -d                         the directory containing the go files to extract strings\n\n  -r                         [optional] recursesively extract strings from all subdirectories\n  --ignore-regexp            [optional] a perl-style regular expression for files to ignore, e.g., \".*test.*\"\n\n  REWRITE-PACKAGE:\n\n  -c rewrite-package         the rewrite package command\n  -f                         the source go file to be rewritten\n  -d                         the directory containing the go files to rewrite\n\n  --i18n-strings-filename    a JSON file with the strings that should be i18n enabled, typically the output of -extract-strings command\n  --i18n-strings-dirname     a directory with the extracted JSON files, using -output-match-package with -extract-strings this directory should match the input files package name\n  --root-path                the root path to the Go source files whose packages are being rewritten, defaults to working directory, if not specified\n\n  --init-code-snippet-filename [optional] the path to a file containing the template snippet for the code that is used for go-i18n initialization\"\n  -o                           [optional] output diretory for rewritten file. If not specified, the original file will be overwritten\n\n  --ignore-regexp\t\t[optional] a perl-style regular expression for files to ignore, e.g., \".*test.*\"\n\n  MERGE STRINGS:\n\n  -c merge-strings           the merge strings command which merges multiple <filename>.go.<language>.json files into a <language>.all.json\n\n  -r                         [optional] recursesively combine files from all subdirectories\n  --source-language          [optional] the source language of the file, typically also part of the file name, e.g., \"en_US\" (default to 'en')\n\n  -d                         the directory containing the json files to combine\n\n  CREATE-TRANSLATIONS:\n\n  -c create-translations     the create translations command\n\n  --google-translate-api-key [optional] your public Google Translate API key which is used to generate translations (charge is applicable)\n  --source-language          [optional] the source language of the file, typically also part of the file name, e.g., \\\"en_US\\\"\n\n  -f                         the source translation file\n  --languages                a comma separated list of valid languages with optional territory, e.g., \\\"en, en_US, fr_FR, es\\\"\n  -o                         the output directory where the newly created translation files will be placed\n\n  VERIFY-STRINGS:\n\n  -c verify-strings          the verify strings command\n\n  --source-language          [optional] the source language of the source translation file (default to 'en')\n\n  -f                         the source translation file\n\n  --language-files           a comma separated list of target files for different languages to compare, e.g., \"en, en_US, fr_FR, es\"\n                             if not specified then the languages flag is used to find target files in same directory as source\n  --languages                a comma separated list of valid languages with optional territory, e.g., \"en, en_US, fr_FR, es\"\n\n  -o                         the output directory where the missing translation keys will be placed\n\n  SHOW-MISSING-STRINGS:\n\n  -c show-missing-strings    the missing strings command\n\n  -d                         the directory containing the go files to validate\n  --i18n-strings-filename    a JSON file with the strings that should be i18n enabled, typically the output of -extract-strings command\n\n  CHECKUP:\n\n  -c checkup                 the checkup command which ensures that the strings in code match strings in resource files and vice versa\n  -q                         the qualifier to use when calling the T(...), defaults to empty but can be used to set to something like i18n for example, such that, i18n.T(...) is used for T(...) function\n\n  FIXUP:\n\n  -c fixup                   the fixup command which interactively lets users add, update, or remove translations keys from code and resource files.\n",
      "translation": "\nusage: i18n4go -c extract-strings [-vpe] [--dry-run] [--output-flat|--output-match-package|-o <outputDir>] -f <fileName>\n   or: i18n4go -c extract-strings [-vpe] [--dry-run] [--output-flat|--output-match-package|-o <outputDir>] -d <dirName> [-r] [--ignore-regexp <fileNameRegexp>]\n\nusage: i18n4go -c rewrite-package [-v] [-r] -d <dirName> [--i18n-strings-filename <fileName> | --i18n-strings-dirname <dirName>] [--init-code-snippet-filename <fileName>] [--ignore-regexp <fileNameRegexp>]\n   or: i18n4go -c rewrite-package [-v] [-r] -f <fileName> --i18n-strings-filename <fileName> [--init-code-snippet-filename <fileName>] [--ignore-regexp <fileNameRegexp>]\n\nusage: i18n4go -c create-translations [-v] [--google-translate-api-key <api key>] [--source-language <language>] -f <fileName> --languages <lang1,lang2,...> -o <outputDir>\n\nusage: i18n4go -c merge-strings [-v] [-r] [--source-language <language>] -d <dirName>\n\nusage: i18n4go -c verify-strings [-v] [--source-language <language>] -f <sourceFileName> --language-files <language files> [-o <outputDir>]\n   or: i18n4go -c verify-strings [-v] [--source-language <language>] -f <sourceFileName> --languages <lang1,lang2,...> [-o <outputDir>]\n\nusage: i18n4go -c show-missing-strings [-v] -d <dirName> --i18n-strings-filename <language file>\n\nusage: i18n4go -c checkup\n\n  -h | --help                prints the usage\n  -v                         verbose\n\n  EXTRACT-STRINGS:\n\n  -c extract-strings         the extract strings command\n\n  --po                       to generate standard .po files for translation\n  -e                         [optional] the JSON file with strings to be excluded, defaults to excluded.json if present\n\t-s\t\t\t\t\t\t\t\t\t\t\t\t [optional] the JSON file with regexp that specify a capturing group to be extracted instead of the full string matching the regexp\n  --meta                     [optional] create a *.extracted.json file with metadata such as: filename, directory, and positions of the strings in source file\n  --dry-run                  [optional] prevents any output files from being created\n\n\n  --output-flat              generated files are created in the specified output directory (default)\n  --output-match-package     generated files are created in directory to match the package name\n  -o                         the output directory where the translation files will be placed\n\n  -f                         the go file name to extract strings\n\n  -d                         the directory containing the go files to extract strings\n\n  -r                         [optional] recursesively extract strings from all subdirectories\n  --ignore-regexp            [optional] a perl-style regular expression for files to ignore, e.g., \".*test.*\"\n\n  REWRITE-PACKAGE:\n\n  -c rewrite-package         the rewrite package command\n  -f                         the source go file to be rewritten\n  -d                         the directory containing the go files to rewrite\n\n  --i18n-strings-filename    a JSON file with the strings that should be i18n enabled, typically the output of -extract-strings command\n  --i18n-strings-dirname     a directory with the extracted JSON files, using -output-match-package with -extract-strings this directory should match the input files package name\n  --root-path                the root path to the Go source files whose packages are being rewritten, defaults to working directory, if not specified\n\n  --init-code-snippet-filename [optional] the path to a file containing the template snippet for the code that is used for go-i18n initialization\"\n  -o                           [optional] output diretory for rewritten file. If not specified, the original file will be overwritten\n\n  --ignore-regexp\t\t[optional] a perl-style regular expression for files to ignore, e.g., \".*test.*\"\n\n  MERGE STRINGS:\n\n  -c merge-strings           the merge strings command which merges multiple <filename>.go.<language>.json files into a <language>.all.json\n\n  -r                         [optional] recursesively combine files from all subdirectories\n  --source-language          [optional] the source language of the file, typically also part of the file name, e.g., \"en_US\" (default to 'en')\n\n  -d                         the directory containing the json files to combine\n\n  CREATE-TRANSLATIONS:\n\n  -c create-translations     the create translations command\n\n  --google-translate-api-key [optional] your public Google Translate API key which is used to generate translations (charge is applicable)\n  --source-language          [optional] the source language of the file, typically also part of the file name, e.g., \\\"en_US\\\"\n\n  -f                         the source translation file\n  --languages                a comma separated list of valid languages with optional territory, e.g., \\\"en, en_US, fr_FR, es\\\"\n  -o                         the output directory where the newly created translation files will be placed\n\n  VERIFY-STRINGS:\n\n  -c verify-strings          the verify strings command\n\n  --source-language          [optional] the source language of the source translation file (default to 'en')\n\n  -f                         the source translation file\n\n  --language-files           a comma separated list of target files for different languages to compare, e.g., \"en, en_US, fr_FR, es\"\n                             if not specified then the languages flag is used to find target files in same directory as source\n  --languages                a comma separated list of valid languages with optional territory, e.g., \"en, en_US, fr_FR, es\"\n\n  -o                         the output directory where the missing translation keys will be placed\n\n  SHOW-MISSING-STRINGS:\n\n  -c show-missing-strings    the missing strings command\n\n  -d                         the directory containing the go files to validate\n  --i18n-strings-filename    a JSON file with the strings that should be i18n enabled, typically the output of -extract-strings command\n\n  CHECKUP:\n\n  -c checkup                 the checkup command which ensures that the strings in code match strings in resource files and vice versa\n  -q                         the qualifier to use when calling the T(...), defaults to empty but can be used to set to something like i18n for example, such that, i18n.T(...) is used for T(...) function\n\n  FIXUP:\n\n  -c fixup                   the fixup command which interactively lets users add, update, or remove translations keys from code and resource files.\n",
      "modified": false
   },
   {
      "id": " to output dir:",
      "translation": " to output dir:",
      "modified": false
   },
   {
      "id": "\"%s\" exists in %s, but not in %s\n",
      "translation": "\"%s\" exists in %s, but not in %s\n",
      "modified": false
   },
   {
      "id": "%s\nVersion %s",
      "translation": "%s\nVersion %s",
      "modified": false
   },
   {
      "id": "&target=",
      "translation": "&target=",
      "modified": false
   },
   {
      "id": ".*test.*",
      "translation": ".*test.*",
      "modified": false
   },
   {
      "id": ".all.json",
      "translation": ".all.json",
      "modified": false
   },
   {
      "id": ".en.po",
      "translation": ".en.po",
      "modified": false
   },
   {
      "id": ".missing.diff.json",
      "translation": ".missing.diff.json",
      "modified": false
   },
   {
      "id": "Add, update, or remove translation keys from source files and resources files",
      "translation": "Add, update, or remove translation keys from source files and resources files",
      "modified": false
   },
   {
      "id": "Adding these strings to the %s translation file:\n",
      "translation": "Adding these strings to the %s translation file:\n",
      "modified": false
   },
   {
      "id": "Adding to translated strings:",
      "translation": "Adding to translated strings:",
      "modified": false
   },
   {
      "id": "Additional Strings!",
      "translation": "Additional Strings!",
      "modified": false
   },
   {
      "id": "Additional:",
      "translation": "Additional:",
      "modified": false
   },
   {
      "id": "An unexpected type of error",
      "translation": "An unexpected type of error",
      "modified": false
   },
   {
      "id": "Build Date:   %s\n",
      "translation": "Build Date:   %s\n",
      "modified": false
   },
   {
      "id": "Canceling fixup",
      "translation": "Canceling fixup",
      "modified": false
   },
   {
      "id": "Capturing substrings in file:",
      "translation": "Capturing substrings in file:",
      "modified": false
   },
   {
      "id": "Checks the transated files",
      "translation": "Checks the transated files",
      "modified": false
   },
   {
      "id": "Could not find an i18n file for locale: en_US",
      "translation": "Could not find an i18n file for locale: en_US",
      "modified": false
   },
   {
      "id": "Could not find imports for root node:\n\t%#v\n",
      "translation": "Could not find imports for root node:\n\t%#v\n",
      "modified": false
   },
   {
      "id": "Could not find:",
      "translation": "Could not find:",
      "modified": false
   },
   {
      "id": "Could not load en_US language files. God save the queen. ",
      "translation": "Could not load en_US language files. God save the queen. ",
      "modified": false
   },
   {
      "id": "Could not load i18n asset: %v",
      "translation": "Could not load i18n asset: %v",
      "modified": false
   },
   {
      "id": "Couldn't find any source strings: %s",
      "translation": "Couldn't find any source strings: %s",
      "modified": false
   },
   {
      "id": "Couldn't find the english strings: %s",
      "translation": "Couldn't find the english strings: %s",
      "modified": false
   },
   {
      "id": "Couldn't get the strings from %s: %s",
      "translation": "Couldn't get the strings from %s: %s",
      "modified": false
   },
   {
      "id": "Creates the transation files",
      "translation": "Creates the transation files",
      "modified": false
   },
   {
      "id": "Creating and saving i18n strings to .po file:",
      "translation": "Creating and saving i18n strings to .po file:",
      "modified": false
   },
   {
      "id": "Duplicated key found: ",
      "translation": "Duplicated key found: ",
      "modified": false
   },
   {
      "id": "ERROR opening file",
      "translation": "ERROR opening file",
      "modified": false
   },
   {
      "id": "Error when inspecting go file: ",
      "translation": "Error when inspecting go file: ",
      "modified": false
   },
   {
      "id": "Excluding regexps in file:",
      "translation": "Excluding regexps in file:",
      "modified": false
   },
   {
      "id": "Excluding strings in file:",
      "translation": "Excluding strings in file:",
      "modified": false
   },
   {
      "id": "Extract the translation strings from go source files",
      "translation": "Extract the translation strings from go source files",
      "modified": false
   },
   {
      "id": "Extracted %d strings from file: %s\n",
      "translation": "Extracted %d strings from file: %s\n",
      "modified": false
   },
   {
      "id": "Extracted total of %d strings\n\n",
      "translation": "Extracted total of %d strings\n\n",
      "modified": false
   },
   {
      "id": "Extracting strings in package:",
      "translation": "Extracting strings in package:",
      "modified": false
   },
   {
      "id": "File has duplicated key: %s\n%s",
      "translation": "File has duplicated key: %s\n%s",
      "modified": false
   },
   {
      "id": "Fixup the transation files",
      "translation": "Fixup the transation files",
      "modified": false
   },
   {
      "id": "Found",
      "translation": "Found",
      "modified": false
   },
   {
      "id": "General purpose tool for i18n",
      "translation": "General purpose tool for i18n",
      "modified": false
   },
   {
      "id": "Git Revision: %s\n",
      "translation": "Git Revision: %s\n",
      "modified": false
   },
   {
      "id": "Invalid response.",
      "translation": "Invalid response.",
      "modified": false
   },
   {
      "id": "Is the string \"%s\" a new or updated string? [new/upd]\n",
      "translation": "Is the string \"%s\" a new or updated string? [new/upd]\n",
      "modified": false
   },
   {
      "id": "Loaded %d excluded regexps",
      "translation": "Loaded %d excluded regexps",
      "modified": false
   },
   {
      "id": "Loaded %d excluded strings",
      "translation": "Loaded %d excluded strings",
      "modified": false
   },
   {
      "id": "Loaded %d substring regexps",
      "translation": "Loaded %d substring regexps",
      "modified": false
   },
   {
      "id": "Merge translation strings",
      "translation": "Merge translation strings",
      "modified": false
   },
   {
      "id": "Missing Strings!",
      "translation": "Missing Strings!",
      "modified": false
   },
   {
      "id": "Missing:",
      "translation": "Missing:",
      "modified": false
   },
   {
      "id": "No match for ignore-regexp:",
      "translation": "No match for ignore-regexp:",
      "modified": false
   },
   {
      "id": "OK",
      "translation": "OK",
      "modified": false
   },
   {
      "id": "PWD",
      "translation": "PWD",
      "modified": false
   },
   {
      "id": "Removing these strings from the %s translation file:\n",
      "translation": "Removing these strings from the %s translation file:\n",
      "modified": false
   },
   {
      "id": "Rewrite translated packages from go source files",
      "translation": "Rewrite translated packages from go source files",
      "modified": false
   },
   {
      "id": "Saving extracted i18n strings to file:",
      "translation": "Saving extracted i18n strings to file:",
      "modified": false
   },
   {
      "id": "Saving extracted strings to file:",
      "translation": "Saving extracted strings to file:",
      "modified": false
   },
   {
      "id": "Select the number for the previous translation:",
      "translation": "Select the number for the previous translation:",
      "modified": false
   },
   {
      "id": "Show the version of the i18n client",
      "translation": "Show the version of the i18n client",
      "modified": false
   },
   {
      "id": "Shows missing strings in translations",
      "translation": "Shows missing strings in translations",
      "modified": false
   },
   {
      "id": "Strings don't match",
      "translation": "Strings don't match",
      "modified": false
   },
   {
      "id": "Total extracted strings:",
      "translation": "Total extracted strings:",
      "modified": false
   },
   {
      "id": "Total files parsed:",
      "translation": "Total files parsed:",
      "modified": false
   },
   {
      "id": "Total rewritten strings:",
      "translation": "Total rewritten strings:",
      "modified": false
   },
   {
      "id": "Total time:",
      "translation": "Total time:",
      "modified": false
   },
   {
      "id": "UNDER",
      "translation": "UNDER",
      "modified": false
   },
   {
      "id": "Unable to find english translation files",
      "translation": "Unable to find english translation files",
      "modified": false
   },
   {
      "id": "Updating the following strings from the %s translation file:\n",
      "translation": "Updating the following strings from the %s translation file:\n",
      "modified": false
   },
   {
      "id": "Using ignore-regexp:",
      "translation": "Using ignore-regexp:",
      "modified": false
   },
   {
      "id": "Verify strings in translations",
      "translation": "Verify strings in translations",
      "modified": false
   },
   {
      "id": "Version:      %s\n",
      "translation": "Version:      %s\n",
      "modified": false
   },
   {
      "id": "WARNING No capturing group found in %s",
      "translation": "WARNING No capturing group found in %s",
      "modified": false
   },
   {
      "id": "WARNING compiling ignore-regexp:",
      "translation": "WARNING compiling ignore-regexp:",
      "modified": false
   },
   {
      "id": "WARNING error compiling regexp:",
      "translation": "WARNING error compiling regexp:",
      "modified": false
   },
   {
      "id": "WARNING ignoring file:",
      "translation": "WARNING ignoring file:",
      "modified": false
   },
   {
      "id": "WARNING running in -dry-run mode",
      "translation": "WARNING running in -dry-run mode",
      "modified": false
   },
   {
      "id": "WARNING: fail to compile ignore-regexp:",
      "translation": "WARNING: fail to compile ignore-regexp:",
      "modified": false
   },
   {
      "id": "[optional] a comma separated list of target files for different languages to compare,  e.g., \\\"en, en_US, fr_FR, es\\\"\t                                                                  if not specified then the languages flag is used to find target files in same directory as source",
      "translation": "[optional] a comma separated list of target files for different languages to compare,  e.g., \\\"en, en_US, fr_FR, es\\\"\t                                                                  if not specified then the languages flag is used to find target files in same directory as source",
      "modified": false
   },
   {
      "id": "[optional] create a *.extracted.json file with metadata such as: filename, directory, and positions of the strings in source file",
      "translation": "[optional] create a *.extracted.json file with metadata such as: filename, directory, and positions of the strings in source file",
      "modified": false
   },
   {
      "id": "[optional] the excluded JSON file name, all strings there will be excluded",
      "translation": "[optional] the excluded JSON file name, all strings there will be excluded",
      "modified": false
   },
   {
      "id": "[optional] the path to a file containing the template snippet for the code that is used for go-i18n initialization",
      "translation": "[optional] the path to a file containing the template snippet for the code that is used for go-i18n initialization",
      "modified": false
   },
   {
      "id": "[optional] the qualifier string that is used when using the T(...) function, default to nothing but could be set to `i18n` so that all calls would be: i18n.T(...)",
      "translation": "[optional] the qualifier string that is used when using the T(...) function, default to nothing but could be set to `i18n` so that all calls would be: i18n.T(...)",
      "modified": false
   },
   {
      "id": "[optional] the substring capturing JSON file name, all strings there will only have their first capturing group saved as a translation",
      "translation": "[optional] the substring capturing JSON file name, all strings there will only have their first capturing group saved as a translation",
      "modified": false
   },
   {
      "id": "[optional] your public Google Translate API key which is used to generate translations (charge is applicable)",
      "translation": "[optional] your public Google Translate API key which is used to generate translations (charge is applicable)",
      "modified": false
   },
   {
      "id": "_test.go",
      "translation": "_test.go",
      "modified": false
   },
   {
      "id": "a JSON file with the strings that should be i18n enabled, typically the output of -extract-strings command",
      "translation": "a JSON file with the strings that should be i18n enabled, typically the output of -extract-strings command",
      "modified": false
   },
   {
      "id": "a JSON file with the strings that should be i18n enabled, typically the output of the extract-strings command",
      "translation": "a JSON file with the strings that should be i18n enabled, typically the output of the extract-strings command",
      "modified": false
   },
   {
      "id": "a comma separated list of target files for different languages to compare,  e.g., \\\"en, en_US, fr_FR, es\\\"\t                                                                  if not specified then the languages flag is used to find target files in same directory as source",
      "translation": "a comma separated list of target files for different languages to compare,  e.g., \\\"en, en_US, fr_FR, es\\\"\t                                                                  if not specified then the languages flag is used to find target files in same directory as source",
      "modified": false
   },
   {
      "id": "a comma separated list of valid languages with optional territory, e.g., \"en, en_US, fr_FR, es\"",
      "translation": "a comma separated list of valid languages with optional territory, e.g., \"en, en_US, fr_FR, es\"",
      "modified": false
   },
   {
      "id": "a directory with the extracted JSON files, using -output-match-package with -extract-strings this directory should match the input files package name",
      "translation": "a directory with the extracted JSON files, using -output-match-package with -extract-strings this directory should match the input files package name",
      "modified": false
   },
   {
      "id": "a directory with the extracted JSON files, using -output-match-package with extract-strings command this directory should match the input files package name",
      "translation": "a directory with the extracted JSON files, using -output-match-package with extract-strings command this directory should match the input files package name",
      "modified": false
   },
   {
      "id": "a perl-style regular expression for files to ignore, e.g., \".*test.*\"",
      "translation": "a perl-style regular expression for files to ignore, e.g., \".*test.*\"",
      "modified": false
   },
   {
      "id": "capturing_group.json",
      "translation": "capturing_group.json",
      "modified": false
   },
   {
      "id": "cf",
      "translation": "cf",
      "modified": false
   },
   {
      "id": "checkup",
      "translation": "checkup",
      "modified": false
   },
   {
      "id": "cowardly refusing to translate the strings in test file:",
      "translation": "cowardly refusing to translate the strings in test file:",
      "modified": false
   },
   {
      "id": "create-translations",
      "translation": "create-translations",
      "modified": false
   },
   {
      "id": "de_DE",
      "translation": "de_DE",
      "modified": false
   },
   {
      "id": "directory",
      "translation": "directory",
      "modified": false
   },
   {
      "id": "dry-run",
      "translation": "dry-run",
      "modified": false
   },
   {
      "id": "en",
      "translation": "en",
      "modified": false
   },
   {
      "id": "en_US",
      "translation": "en_US",
      "modified": false
   },
   {
      "id": "es_ES",
      "translation": "es_ES",
      "modified": false
   },
   {
      "id": "exclude",
      "translation": "exclude",
      "modified": false
   },
   {
      "id": "excluded|json|all",
      "translation": "excluded|json|all",
      "modified": false
   },
   {
      "id": "exit",
      "translation": "exit",
      "modified": false
   },
   {
      "id": "extract-strings",
      "translation": "extract-strings",
      "modified": false
   },
   {
      "id": "extracted_strings.json",
      "translation": "extracted_strings.json",
      "modified": false
   },
   {
      "id": "file",
      "translation": "file",
      "modified": false
   },
   {
      "id": "filepath.Join(",
      "translation": "filepath.Join(",
      "modified": false
   },
   {
      "id": "fixup",
      "translation": "fixup",
      "modified": false
   },
   {
      "id": "fr_FR",
      "translation": "fr_FR",
      "modified": false
   },
   {
      "id": "generate standard .po file for translation",
      "translation": "generate standard .po file for translation",
      "modified": false
   },
   {
      "id": "generated files are created in directory to match the package name",
      "translation": "generated files are created in directory to match the package name",
      "modified": false
   },
   {
      "id": "generated files are created in the specified output directory",
      "translation": "generated files are created in the specified output directory",
      "modified": false
   },
   {
      "id": "google-translate-api-key",
      "translation": "google-translate-api-key",
      "modified": false
   },
   {
      "id": "i18n-strings-dirname",
      "translation": "i18n-strings-dirname",
      "modified": false
   },
   {
      "id": "i18n-strings-filename",
      "translation": "i18n-strings-filename",
      "modified": false
   },
   {
      "id": "i18n4go: Could not checkup, err:",
      "translation": "i18n4go: Could not checkup, err:",
      "modified": false
   },
   {
      "id": "i18n4go: Could not create translation files, err:",
      "translation": "i18n4go: Could not create translation files, err:",
      "modified": false
   },
   {
      "id": "i18n4go: Could not extract strings, err:",
      "translation": "i18n4go: Could not extract strings, err:",
      "modified": false
   },
   {
      "id": "i18n4go: Could not fixup, err:",
      "translation": "i18n4go: Could not fixup, err:",
      "modified": false
   },
   {
      "id": "i18n4go: Could not merge strings, err:",
      "translation": "i18n4go: Could not merge strings, err:",
      "modified": false
   },
   {
      "id": "i18n4go: Could not show missing strings, err:",
      "translation": "i18n4go: Could not show missing strings, err:",
      "modified": false
   },
   {
      "id": "i18n4go: Could not successfully rewrite package, err:",
      "translation": "i18n4go: Could not successfully rewrite package, err:",
      "modified": false
   },
   {
      "id": "i18n4go: Could not verify strings for input filename, err:",
      "translation": "i18n4go: Could not verify strings for input filename, err:",
      "modified": false
   },
   {
      "id": "i18n4go: ERROR could not create the diff file:",
      "translation": "i18n4go: ERROR could not create the diff file:",
      "modified": false
   },
   {
      "id": "i18n4go: ERROR input file does not match target file:",
      "translation": "i18n4go: ERROR input file does not match target file:",
      "modified": false
   },
   {
      "id": "i18n4go: ERROR invoking Google Translate: ",
      "translation": "i18n4go: ERROR invoking Google Translate: ",
      "modified": false
   },
   {
      "id": "i18n4go: ERROR parsing Google Translate response body",
      "translation": "i18n4go: ERROR parsing Google Translate response body",
      "modified": false
   },
   {
      "id": "i18n4go: Error checking input filename: ",
      "translation": "i18n4go: Error checking input filename: ",
      "modified": false
   },
   {
      "id": "i18n4go: Error compiling interpolated string Regexp: %s\n",
      "translation": "i18n4go: Error compiling interpolated string Regexp: %s\n",
      "modified": false
   },
   {
      "id": "i18n4go: Error compiling templated string Regexp: %s\n",
      "translation": "i18n4go: Error compiling templated string Regexp: %s\n",
      "modified": false
   },
   {
      "id": "i18n4go: Error input file: %s is empty",
      "translation": "i18n4go: Error input file: %s is empty",
      "modified": false
   },
   {
      "id": "i18n4go: Error loading the i18n strings from input filename:",
      "translation": "i18n4go: Error loading the i18n strings from input filename:",
      "modified": false
   },
   {
      "id": "i18n4go: Error loading the i18n strings from target filename:",
      "translation": "i18n4go: Error loading the i18n strings from target filename:",
      "modified": false
   },
   {
      "id": "i18n4go: Error verifying target filename: ",
      "translation": "i18n4go: Error verifying target filename: ",
      "modified": false
   },
   {
      "id": "i18n4go: Non-regular source file %s (%s)\n",
      "translation": "i18n4go: Non-regular source file %s (%s)\n",
      "modified": false
   },
   {
      "id": "i18n4go: WARNING could not find JSON file:",
      "translation": "i18n4go: WARNING could not find JSON file:",
      "modified": false
   },
   {
      "id": "i18n4go: WARNING target file contains total of extra keys:",
      "translation": "i18n4go: WARNING target file contains total of extra keys:",
      "modified": false
   },
   {
      "id": "i18n4go: WARNING target file contains total of invalid translations:",
      "translation": "i18n4go: WARNING target file contains total of invalid translations:",
      "modified": false
   },
   {
      "id": "i18n4go: WARNING target file has extra key with ID: ",
      "translation": "i18n4go: WARNING target file has extra key with ID: ",
      "modified": false
   },
   {
      "id": "i18n4go: WARNING target file has invalid templated translations with key ID: ",
      "translation": "i18n4go: WARNING target file has invalid templated translations with key ID: ",
      "modified": false
   },
   {
      "id": "i18n4go: adding init func to package:",
      "translation": "i18n4go: adding init func to package:",
      "modified": false
   },
   {
      "id": "i18n4go: attempting to use Google Translate to translate source strings in: ",
      "translation": "i18n4go: attempting to use Google Translate to translate source strings in: ",
      "modified": false
   },
   {
      "id": "i18n4go: could not create default translation file for language: %s\nerr:%s",
      "translation": "i18n4go: could not create default translation file for language: %s\nerr:%s",
      "modified": false
   },
   {
      "id": "i18n4go: could not create output directory: %s",
      "translation": "i18n4go: could not create output directory: %s",
      "modified": false
   },
   {
      "id": "i18n4go: could not create translation file for language: %s with Google Translate",
      "translation": "i18n4go: could not create translation file for language: %s with Google Translate",
      "modified": false
   },
   {
      "id": "i18n4go: could not extract strings from directory:",
      "translation": "i18n4go: could not extract strings from directory:",
      "modified": false
   },
   {
      "id": "i18n4go: could not load i18n strings from file: %s",
      "translation": "i18n4go: could not load i18n strings from file: %s",
      "modified": false
   },
   {
      "id": "i18n4go: could not save Google Translate i18n strings to file: %s",
      "translation": "i18n4go: could not save Google Translate i18n strings to file: %s",
      "modified": false
   },
   {
      "id": "i18n4go: could not save PO file: %s",
      "translation": "i18n4go: could not save PO file: %s",
      "modified": false
   },
   {
      "id": "i18n4go: created default translation file:",
      "translation": "i18n4go: created default translation file:",
      "modified": false
   },
   {
      "id": "i18n4go: created translation file with Google Translate:",
      "translation": "i18n4go: created translation file with Google Translate:",
      "modified": false
   },
   {
      "id": "i18n4go: creating and saving i18n strings to .po file:",
      "translation": "i18n4go: creating and saving i18n strings to .po file:",
      "modified": false
   },
   {
      "id": "i18n4go: creating translation file copy for language:",
      "translation": "i18n4go: creating translation file copy for language:",
      "modified": false
   },
   {
      "id": "i18n4go: creating translation file:",
      "translation": "i18n4go: creating translation file:",
      "modified": false
   },
   {
      "id": "i18n4go: creating translation files for:",
      "translation": "i18n4go: creating translation files for:",
      "modified": false
   },
   {
      "id": "i18n4go: determining import path using root path:",
      "translation": "i18n4go: determining import path using root path:",
      "modified": false
   },
   {
      "id": "i18n4go: error adding init() func to package:",
      "translation": "i18n4go: error adding init() func to package:",
      "modified": false
   },
   {
      "id": "i18n4go: error appending T() to AST file:",
      "translation": "i18n4go: error appending T() to AST file:",
      "modified": false
   },
   {
      "id": "i18n4go: error determining the import path:",
      "translation": "i18n4go: error determining the import path:",
      "modified": false
   },
   {
      "id": "i18n4go: error getting root path import:",
      "translation": "i18n4go: error getting root path import:",
      "modified": false
   },
   {
      "id": "i18n4go: error invoking Google Translate for string:",
      "translation": "i18n4go: error invoking Google Translate for string:",
      "modified": false
   },
   {
      "id": "i18n4go: error reading content of init code snippet file: %s\n, using default",
      "translation": "i18n4go: error reading content of init code snippet file: %s\n, using default",
      "modified": false
   },
   {
      "id": "i18n4go: error saving AST file:",
      "translation": "i18n4go: error saving AST file:",
      "modified": false
   },
   {
      "id": "i18n4go: error saving updated i18n strings file:",
      "translation": "i18n4go: error saving updated i18n strings file:",
      "modified": false
   },
   {
      "id": "i18n4go: extracting strings from file:",
      "translation": "i18n4go: extracting strings from file:",
      "modified": false
   },
   {
      "id": "i18n4go: generated diff file:",
      "translation": "i18n4go: generated diff file:",
      "modified": false
   },
   {
      "id": "i18n4go: got a local import %s so using %s instead for pkg",
      "translation": "i18n4go: got a local import %s so using %s instead for pkg",
      "modified": false
   },
   {
      "id": "i18n4go: got a local import %s so using %s instead for root pkg",
      "translation": "i18n4go: got a local import %s so using %s instead for root pkg",
      "modified": false
   },
   {
      "id": "i18n4go: got a pkg with import:",
      "translation": "i18n4go: got a pkg with import:",
      "modified": false
   },
   {
      "id": "i18n4go: got a root pkg with import path:",
      "translation": "i18n4go: got a root pkg with import path:",
      "modified": false
   },
   {
      "id": "i18n4go: input file: %s is empty",
      "translation": "i18n4go: input file: %s is empty",
      "modified": false
   },
   {
      "id": "i18n4go: inserting T() calls for strings that need to be translated",
      "translation": "i18n4go: inserting T() calls for strings that need to be translated",
      "modified": false
   },
   {
      "id": "i18n4go: inspecting dir %s, recursive: %t\n",
      "translation": "i18n4go: inspecting dir %s, recursive: %t\n",
      "modified": false
   },
   {
      "id": "i18n4go: loading JSON strings from file: %s\n",
      "translation": "i18n4go: loading JSON strings from file: %s\n",
      "modified": false
   },
   {
      "id": "i18n4go: rewriting strings for source file:",
      "translation": "i18n4go: rewriting strings for source file:",
      "modified": false
   },
   {
      "id": "i18n4go: rewriting strings in dir %s, recursive: %t\n",
      "translation": "i18n4go: rewriting strings in dir %s, recursive: %t\n",
      "modified": false
   },
   {
      "id": "i18n4go: saving combined language file: ",
      "translation": "i18n4go: saving combined language file: ",
      "modified": false
   },
   {
      "id": "i18n4go: scanning file: ",
      "translation": "i18n4go: scanning file: ",
      "modified": false
   },
   {
      "id": "i18n4go: target file has extra i18n strings with IDs: %s",
      "translation": "i18n4go: target file has extra i18n strings with IDs: %s",
      "modified": false
   },
   {
      "id": "i18n4go: target file has invalid i18n strings with IDs: %s",
      "translation": "i18n4go: target file has invalid i18n strings with IDs: %s",
      "modified": false
   },
   {
      "id": "i18n4go: target file is missing i18n strings with IDs: %s",
      "translation": "i18n4go: target file is missing i18n strings with IDs: %s",
      "modified": false
   },
   {
      "id": "i18n4go: templated string is invalid, missing args in translation:",
      "translation": "i18n4go: templated string is invalid, missing args in translation:",
      "modified": false
   },
   {
      "id": "i18n4go: using import path as:",
      "translation": "i18n4go: using import path as:",
      "modified": false
   },
   {
      "id": "i18n4go: using the PWD as the rootPath:",
      "translation": "i18n4go: using the PWD as the rootPath:",
      "modified": false
   },
   {
      "id": "i18n4go_res",
      "translation": "i18n4go_res",
      "modified": false
   },
   {
      "id": "i18n_init.go",
      "translation": "i18n_init.go",
      "modified": false
   },
   {
      "id": "ignore-regexp",
      "translation": "ignore-regexp",
      "modified": false
   },
   {
      "id": "init-code-snippet-filename",
      "translation": "init-code-snippet-filename",
      "modified": false
   },
   {
      "id": "it_IT",
      "translation": "it_IT",
      "modified": false
   },
   {
      "id": "ja_JA",
      "translation": "ja_JA",
      "modified": false
   },
   {
      "id": "ko_KO",
      "translation": "ko_KO",
      "modified": false
   },
   {
      "id": "language-files",
      "translation": "language-files",
      "modified": false
   },
   {
      "id": "languages",
      "translation": "languages",
      "modified": false
   },
   {
      "id": "merge-strings",
      "translation": "merge-strings",
      "modified": false
   },
   {
      "id": "meta",
      "translation": "meta",
      "modified": false
   },
   {
      "id": "new",
      "translation": "new",
      "modified": false
   },
   {
      "id": "output",
      "translation": "output",
      "modified": false
   },
   {
      "id": "output directory where the translation files will be placed",
      "translation": "output directory where the translation files will be placed",
      "modified": false
   },
   {
      "id": "output-flat",
      "translation": "output-flat",
      "modified": false
   },
   {
      "id": "output-match-package",
      "translation": "output-match-package",
      "modified": false
   },
   {
      "id": "package __PACKAGE__NAME__\n\nimport (\n\t\"path/filepath\"\n\n\ti18n \"github.com/maximilien/i18n4go/i18n\"\n)\n\nvar T i18n.TranslateFunc\n\nfunc init() {\n\tT = i18n.Init(__FULL_IMPORT_PATH__, i18n.GetResourcesPath())\n}",
      "translation": "package __PACKAGE__NAME__\n\nimport (\n\t\"path/filepath\"\n\n\ti18n \"github.com/maximilien/i18n4go/i18n\"\n)\n\nvar T i18n.TranslateFunc\n\nfunc init() {\n\tT = i18n.Init(__FULL_IMPORT_PATH__, i18n.GetResourcesPath())\n}",
      "modified": false
   },
   {
      "id": "po",
      "translation": "po",
      "modified": false
   },
   {
      "id": "prevents any output files from being created",
      "translation": "prevents any output files from being created",
      "modified": false
   },
   {
      "id": "prints the usage",
      "translation": "prints the usage",
      "modified": false
   },
   {
      "id": "pt_BR",
      "translation": "pt_BR",
      "modified": false
   },
   {
      "id": "qualifier",
      "translation": "qualifier",
      "modified": false
   },
   {
      "id": "recursive",
      "translation": "recursive",
      "modified": false
   },
   {
      "id": "recursively extract strings from all files in the same directory as filename or dirName",
      "translation": "recursively extract strings from all files in the same directory as filename or dirName",
      "modified": false
   },
   {
      "id": "recursively rewrite packages from all files in the same directory as filename or dirName",
      "translation": "recursively rewrite packages from all files in the same directory as filename or dirName",
      "modified": false
   },
   {
      "id": "resources",
      "translation": "resources",
      "modified": false
   },
   {
      "id": "rewrite-package",
      "translation": "rewrite-package",
      "modified": false
   },
   {
      "id": "root-path",
      "translation": "root-path",
      "modified": false
   },
   {
      "id": "ru_RU",
      "translation": "ru_RU",
      "modified": false
   },
   {
      "id": "saving file to path",
      "translation": "saving file to path",
      "modified": false
   },
   {
      "id": "show-missing-strings",
      "translation": "show-missing-strings",
      "modified": false
   },
   {
      "id": "source-language",
      "translation": "source-language",
      "modified": false
   },
   {
      "id": "src",
      "translation": "src",
      "modified": false
   },
   {
      "id": "string",
      "translation": "string",
      "modified": false
   },
   {
      "id": "substring-file",
      "translation": "substring-file",
      "modified": false
   },
   {
      "id": "targetFilenames:",
      "translation": "targetFilenames:",
      "modified": false
   },
   {
      "id": "the JSON file with strings to be excluded, defaults to excluded.json if present",
      "translation": "the JSON file with strings to be excluded, defaults to excluded.json if present",
      "modified": false
   },
   {
      "id": "the code",
      "translation": "the code",
      "modified": false
   },
   {
      "id": "the command, one of: extract-strings, create-translations, rewrite-package, verify-strings, merge-strings, checkup, fixup",
      "translation": "the command, one of: extract-strings, create-translations, rewrite-package, verify-strings, merge-strings, checkup, fixup",
      "modified": false
   },
   {
      "id": "the dir name for which all .go files will have their strings extracted",
      "translation": "the dir name for which all .go files will have their strings extracted",
      "modified": false
   },
   {
      "id": "the directory containing the go files to validate",
      "translation": "the directory containing the go files to validate",
      "modified": false
   },
   {
      "id": "the file name for which strings are extracted",
      "translation": "the file name for which strings are extracted",
      "modified": false
   },
   {
      "id": "the output directory where the missing translation keys will be placed",
      "translation": "the output directory where the missing translation keys will be placed",
      "modified": false
   },
   {
      "id": "the output directory where the newly created translation files will be placed",
      "translation": "the output directory where the newly created translation files will be placed",
      "modified": false
   },
   {
      "id": "the root path to the Go source files whose packages are being rewritten, defaults to working directory, if not specified",
      "translation": "the root path to the Go source files whose packages are being rewritten, defaults to working directory, if not specified",
      "modified": false
   },
   {
      "id": "the source go file to be rewritten",
      "translation": "the source go file to be rewritten",
      "modified": false
   },
   {
      "id": "the source language of the file, typically also part of the file name, e.g., \"en_US\"",
      "translation": "the source language of the file, typically also part of the file name, e.g., \"en_US\"",
      "modified": false
   },
   {
      "id": "the source translation file",
      "translation": "the source translation file",
      "modified": false
   },
   {
      "id": "the substring capturing JSON file name, all strings there will only have their first capturing group saved as a translation",
      "translation": "the substring capturing JSON file name, all strings there will only have their first capturing group saved as a translation",
      "modified": false
   },
   {
      "id": "upd",
      "translation": "upd",
      "modified": false
   },
   {
      "id": "v1.4.0",
      "translation": "v1.4.0",
      "modified": false
   },
   {
      "id": "verbose",
      "translation": "verbose",
      "modified": false
   },
   {
      "id": "verbose mode where lots of output is generated during execution",
      "translation": "verbose mode where lots of output is generated during execution",
      "modified": false
   },
   {
      "id": "verify-strings",
      "translation": "verify-strings",
      "modified": false
   },
   {
      "id": "version",
      "translation": "version",
      "modified": false
   },
   {
      "id": "zh_CN",
      "translation": "zh_CN",
      "modified": false
   }
]
