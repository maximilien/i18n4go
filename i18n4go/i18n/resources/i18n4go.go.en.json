[
   {
      "id": "\nSomething completely unexpected happened. This is a bug in %s.\nPlease file this bug : https://github.com/maximilien/i18n4go/issues\nTell us that you ran this command:\n\n\t%s\n\nthis error occurred:\n\n\t%s\n\nand this stack trace:\n\n%s\n\t",
      "translation": "\nSomething completely unexpected happened. This is a bug in %s.\nPlease file this bug : https://github.com/maximilien/i18n4go/issues\nTell us that you ran this command:\n\n\t%s\n\nthis error occurred:\n\n\t%s\n\nand this stack trace:\n\n%s\n\t",
      "modified": false
   },
   {
      "id": "[optional] the excluded JSON file name, all strings there will be excluded",
      "translation": "[optional] the excluded JSON file name, all strings there will be excluded",
      "modified": false
   },
   {
      "id": "output-flat",
      "translation": "output-flat",
      "modified": false
   },
   {
      "id": "i18n4go: Could not extract strings, err:",
      "translation": "i18n4go: Could not extract strings, err:",
      "modified": false
   },
   {
      "id": "\nusage: i18n4go -c extract-strings [-vpe] [--dry-run] [--output-flat|--output-match-package|-o <outputDir>] -f <fileName>\n   or: i18n4go -c extract-strings [-vpe] [--dry-run] [--output-flat|--output-match-package|-o <outputDir>] -d <dirName> [-r] [--ignore-regexp <fileNameRegexp>]\n\nusage: i18n4go -c rewrite-package [-v] [-r] -d <dirName> [--i18n-strings-filename <fileName> | --i18n-strings-dirname <dirName>] [--init-code-snippet-filename <fileName>] [--ignore-regexp <fileNameRegexp>]\n   or: i18n4go -c rewrite-package [-v] [-r] -f <fileName> --i18n-strings-filename <fileName> [--init-code-snippet-filename <fileName>] [--ignore-regexp <fileNameRegexp>]\n\nusage: i18n4go -c create-translations [-v] [--google-translate-api-key <api key>] [--source-language <language>] -f <fileName> --languages <lang1,lang2,...> -o <outputDir>\n\nusage: i18n4go -c merge-strings [-v] [-r] [--source-language <language>] -d <dirName>\n\nusage: i18n4go -c verify-strings [-v] [--source-language <language>] -f <sourceFileName> --language-files <language files> [-o <outputDir>]\n   or: i18n4go -c verify-strings [-v] [--source-language <language>] -f <sourceFileName> --languages <lang1,lang2,...> [-o <outputDir>]\n\nusage: i18n4go -c show-missing-strings [-v] -d <dirName> --i18n-strings-filename <language file>\n\nusage: i18n4go -c checkup\n\n  -h | --help                prints the usage\n  -v                         verbose\n\n  EXTRACT-STRINGS:\n\n  -c extract-strings         the extract strings command\n\n  --po                       to generate standard .po files for translation\n  -e                         [optional] the JSON file with strings to be excluded, defaults to excluded.json if present\n\t-s\t\t\t\t\t\t\t\t\t\t\t\t [optional] the JSON file with regexp that specify a capturing group to be extracted instead of the full string matching the regexp\n  --meta                     [optional] create a *.extracted.json file with metadata such as: filename, directory, and positions of the strings in source file\n  --dry-run                  [optional] prevents any output files from being created\n\n\n  --output-flat              generated files are created in the specified output directory (default)\n  --output-match-package     generated files are created in directory to match the package name\n  -o                         the output directory where the translation files will be placed\n\n  -f                         the go file name to extract strings\n\n  -d                         the directory containing the go files to extract strings\n\n  -r                         [optional] recursesively extract strings from all subdirectories\n  --ignore-regexp            [optional] a perl-style regular expression for files to ignore, e.g., \".*test.*\"\n\n  REWRITE-PACKAGE:\n\n  -c rewrite-package         the rewrite package command\n  -f                         the source go file to be rewritten\n  -d                         the directory containing the go files to rewrite\n\n  --i18n-strings-filename    a JSON file with the strings that should be i18n enabled, typically the output of -extract-strings command\n  --i18n-strings-dirname     a directory with the extracted JSON files, using -output-match-package with -extract-strings this directory should match the input files package name\n  --root-path                the root path to the Go source files whose packages are being rewritten, defaults to working directory, if not specified\n\n  --init-code-snippet-filename [optional] the path to a file containing the template snippet for the code that is used for go-i18n initialization\"\n  -o                           [optional] output diretory for rewritten file. If not specified, the original file will be overwritten\n\n  --ignore-regexp\t\t[optional] a perl-style regular expression for files to ignore, e.g., \".*test.*\"\n\n  MERGE STRINGS:\n\n  -c merge-strings           the merge strings command which merges multiple <filename>.go.<language>.json files into a <language>.all.json\n\n  -r                         [optional] recursesively combine files from all subdirectories\n  --source-language          [optional] the source language of the file, typically also part of the file name, e.g., \"en_US\" (default to 'en')\n\n  -d                         the directory containing the json files to combine\n\n  CREATE-TRANSLATIONS:\n\n  -c create-translations     the create translations command\n\n  --google-translate-api-key [optional] your public Google Translate API key which is used to generate translations (charge is applicable)\n  --source-language          [optional] the source language of the file, typically also part of the file name, e.g., \\\"en_US\\\"\n\n  -f                         the source translation file\n  --languages                a comma separated list of valid languages with optional territory, e.g., \\\"en, en_US, fr_FR, es\\\"\n  -o                         the output directory where the newly created translation files will be placed\n\n  VERIFY-STRINGS:\n\n  -c verify-strings          the verify strings command\n\n  --source-language          [optional] the source language of the source translation file (default to 'en')\n\n  -f                         the source translation file\n\n  --language-files           a comma separated list of target files for different languages to compare, e.g., \"en, en_US, fr_FR, es\"\n                             if not specified then the languages flag is used to find target files in same directory as source\n  --languages                a comma separated list of valid languages with optional territory, e.g., \"en, en_US, fr_FR, es\"\n\n  -o                         the output directory where the missing translation keys will be placed\n\n  SHOW-MISSING-STRINGS:\n\n  -c show-missing-strings    the missing strings command\n\n  -d                         the directory containing the go files to validate\n  --i18n-strings-filename    a JSON file with the strings that should be i18n enabled, typically the output of -extract-strings command\n\n  CHECKUP:\n\n  -c checkup                 the checkup command which ensures that the strings in code match strings in resource files and vice versa\n  -q                         the qualifier to use when calling the T(...), defaults to empty but can be used to set to something like i18n for example, such that, i18n.T(...) is used for T(...) function\n\n  FIXUP:\n\n  -c fixup                   the fixup command which interactively lets users add, update, or remove translations keys from code and resource files.\n",
      "translation": "\nusage: i18n4go -c extract-strings [-vpe] [--dry-run] [--output-flat|--output-match-package|-o <outputDir>] -f <fileName>\n   or: i18n4go -c extract-strings [-vpe] [--dry-run] [--output-flat|--output-match-package|-o <outputDir>] -d <dirName> [-r] [--ignore-regexp <fileNameRegexp>]\n\nusage: i18n4go -c rewrite-package [-v] [-r] -d <dirName> [--i18n-strings-filename <fileName> | --i18n-strings-dirname <dirName>] [--init-code-snippet-filename <fileName>] [--ignore-regexp <fileNameRegexp>]\n   or: i18n4go -c rewrite-package [-v] [-r] -f <fileName> --i18n-strings-filename <fileName> [--init-code-snippet-filename <fileName>] [--ignore-regexp <fileNameRegexp>]\n\nusage: i18n4go -c create-translations [-v] [--google-translate-api-key <api key>] [--source-language <language>] -f <fileName> --languages <lang1,lang2,...> -o <outputDir>\n\nusage: i18n4go -c merge-strings [-v] [-r] [--source-language <language>] -d <dirName>\n\nusage: i18n4go -c verify-strings [-v] [--source-language <language>] -f <sourceFileName> --language-files <language files> [-o <outputDir>]\n   or: i18n4go -c verify-strings [-v] [--source-language <language>] -f <sourceFileName> --languages <lang1,lang2,...> [-o <outputDir>]\n\nusage: i18n4go -c show-missing-strings [-v] -d <dirName> --i18n-strings-filename <language file>\n\nusage: i18n4go -c checkup\n\n  -h | --help                prints the usage\n  -v                         verbose\n\n  EXTRACT-STRINGS:\n\n  -c extract-strings         the extract strings command\n\n  --po                       to generate standard .po files for translation\n  -e                         [optional] the JSON file with strings to be excluded, defaults to excluded.json if present\n\t-s\t\t\t\t\t\t\t\t\t\t\t\t [optional] the JSON file with regexp that specify a capturing group to be extracted instead of the full string matching the regexp\n  --meta                     [optional] create a *.extracted.json file with metadata such as: filename, directory, and positions of the strings in source file\n  --dry-run                  [optional] prevents any output files from being created\n\n\n  --output-flat              generated files are created in the specified output directory (default)\n  --output-match-package     generated files are created in directory to match the package name\n  -o                         the output directory where the translation files will be placed\n\n  -f                         the go file name to extract strings\n\n  -d                         the directory containing the go files to extract strings\n\n  -r                         [optional] recursesively extract strings from all subdirectories\n  --ignore-regexp            [optional] a perl-style regular expression for files to ignore, e.g., \".*test.*\"\n\n  REWRITE-PACKAGE:\n\n  -c rewrite-package         the rewrite package command\n  -f                         the source go file to be rewritten\n  -d                         the directory containing the go files to rewrite\n\n  --i18n-strings-filename    a JSON file with the strings that should be i18n enabled, typically the output of -extract-strings command\n  --i18n-strings-dirname     a directory with the extracted JSON files, using -output-match-package with -extract-strings this directory should match the input files package name\n  --root-path                the root path to the Go source files whose packages are being rewritten, defaults to working directory, if not specified\n\n  --init-code-snippet-filename [optional] the path to a file containing the template snippet for the code that is used for go-i18n initialization\"\n  -o                           [optional] output diretory for rewritten file. If not specified, the original file will be overwritten\n\n  --ignore-regexp\t\t[optional] a perl-style regular expression for files to ignore, e.g., \".*test.*\"\n\n  MERGE STRINGS:\n\n  -c merge-strings           the merge strings command which merges multiple <filename>.go.<language>.json files into a <language>.all.json\n\n  -r                         [optional] recursesively combine files from all subdirectories\n  --source-language          [optional] the source language of the file, typically also part of the file name, e.g., \"en_US\" (default to 'en')\n\n  -d                         the directory containing the json files to combine\n\n  CREATE-TRANSLATIONS:\n\n  -c create-translations     the create translations command\n\n  --google-translate-api-key [optional] your public Google Translate API key which is used to generate translations (charge is applicable)\n  --source-language          [optional] the source language of the file, typically also part of the file name, e.g., \\\"en_US\\\"\n\n  -f                         the source translation file\n  --languages                a comma separated list of valid languages with optional territory, e.g., \\\"en, en_US, fr_FR, es\\\"\n  -o                         the output directory where the newly created translation files will be placed\n\n  VERIFY-STRINGS:\n\n  -c verify-strings          the verify strings command\n\n  --source-language          [optional] the source language of the source translation file (default to 'en')\n\n  -f                         the source translation file\n\n  --language-files           a comma separated list of target files for different languages to compare, e.g., \"en, en_US, fr_FR, es\"\n                             if not specified then the languages flag is used to find target files in same directory as source\n  --languages                a comma separated list of valid languages with optional territory, e.g., \"en, en_US, fr_FR, es\"\n\n  -o                         the output directory where the missing translation keys will be placed\n\n  SHOW-MISSING-STRINGS:\n\n  -c show-missing-strings    the missing strings command\n\n  -d                         the directory containing the go files to validate\n  --i18n-strings-filename    a JSON file with the strings that should be i18n enabled, typically the output of -extract-strings command\n\n  CHECKUP:\n\n  -c checkup                 the checkup command which ensures that the strings in code match strings in resource files and vice versa\n  -q                         the qualifier to use when calling the T(...), defaults to empty but can be used to set to something like i18n for example, such that, i18n.T(...) is used for T(...) function\n\n  FIXUP:\n\n  -c fixup                   the fixup command which interactively lets users add, update, or remove translations keys from code and resource files.\n",
      "modified": false
   },
   {
      "id": "po",
      "translation": "po",
      "modified": false
   },
   {
      "id": "output-match-package",
      "translation": "output-match-package",
      "modified": false
   },
   {
      "id": "i18n4go: Could not verify strings for input filename, err:",
      "translation": "i18n4go: Could not verify strings for input filename, err:",
      "modified": false
   },
   {
      "id": "i18n4go: Could not successfully rewrite package, err:",
      "translation": "i18n4go: Could not successfully rewrite package, err:",
      "modified": false
   },
   {
      "id": "en",
      "translation": "en",
      "modified": false
   },
   {
      "id": "[optional] create a *.extracted.json file with metadata such as: filename, directory, and positions of the strings in source file",
      "translation": "[optional] create a *.extracted.json file with metadata such as: filename, directory, and positions of the strings in source file",
      "modified": false
   },
   {
      "id": "[optional] the substring capturing JSON file name, all strings there will only have their first capturing group saved as a translation",
      "translation": "[optional] the substring capturing JSON file name, all strings there will only have their first capturing group saved as a translation",
      "modified": false
   },
   {
      "id": "the dir name for which all .go files will have their strings extracted",
      "translation": "the dir name for which all .go files will have their strings extracted",
      "modified": false
   },
   {
      "id": "extract-strings",
      "translation": "extract-strings",
      "modified": false
   },
   {
      "id": "merge-strings",
      "translation": "merge-strings",
      "modified": false
   },
   {
      "id": "[optional] the qualifier string that is used when using the T(...) function, default to nothing but could be set to `i18n` so that all calls would be: i18n.T(...)",
      "translation": "[optional] the qualifier string that is used when using the T(...) function, default to nothing but could be set to `i18n` so that all calls would be: i18n.T(...)",
      "modified": false
   },
   {
      "id": "i18n-strings-dirname",
      "translation": "i18n-strings-dirname",
      "modified": false
   },
   {
      "id": "the root path to the Go source files whose packages are being rewritten, defaults to working directory, if not specified",
      "translation": "the root path to the Go source files whose packages are being rewritten, defaults to working directory, if not specified",
      "modified": false
   },
   {
      "id": ".*test.*",
      "translation": ".*test.*",
      "modified": false
   },
   {
      "id": "a JSON file with the strings that should be i18n enabled, typically the output of -extract-strings command",
      "translation": "a JSON file with the strings that should be i18n enabled, typically the output of -extract-strings command",
      "modified": false
   },
   {
      "id": "fixup",
      "translation": "fixup",
      "modified": false
   },
   {
      "id": "output directory where the translation files will be placed",
      "translation": "output directory where the translation files will be placed",
      "modified": false
   },
   {
      "id": "generated files are created in the specified output directory",
      "translation": "generated files are created in the specified output directory",
      "modified": false
   },
   {
      "id": "language-files",
      "translation": "language-files",
      "modified": false
   },
   {
      "id": "verify-strings",
      "translation": "verify-strings",
      "modified": false
   },
   {
      "id": "show-missing-strings",
      "translation": "show-missing-strings",
      "modified": false
   },
   {
      "id": "the command, one of: extract-strings, create-translations, rewrite-package, verify-strings, merge-strings, checkup, fixup",
      "translation": "the command, one of: extract-strings, create-translations, rewrite-package, verify-strings, merge-strings, checkup, fixup",
      "modified": false
   },
   {
      "id": "the file name for which strings are extracted",
      "translation": "the file name for which strings are extracted",
      "modified": false
   },
   {
      "id": "v1.4.0",
      "translation": "v1.4.0",
      "modified": false
   },
   {
      "id": "Total time:",
      "translation": "Total time:",
      "modified": false
   },
   {
      "id": "prints the usage",
      "translation": "prints the usage",
      "modified": false
   },
   {
      "id": "[optional] a comma separated list of target files for different languages to compare,  e.g., \\\"en, en_US, fr_FR, es\\\"\t                                                                  if not specified then the languages flag is used to find target files in same directory as source",
      "translation": "[optional] a comma separated list of target files for different languages to compare,  e.g., \\\"en, en_US, fr_FR, es\\\"\t                                                                  if not specified then the languages flag is used to find target files in same directory as source",
      "modified": false
   },
   {
      "id": "verbose",
      "translation": "verbose",
      "modified": false
   },
   {
      "id": "i18n4go: Could not show missing strings, err:",
      "translation": "i18n4go: Could not show missing strings, err:",
      "modified": false
   },
   {
      "id": "source-language",
      "translation": "source-language",
      "modified": false
   },
   {
      "id": "[optional] your public Google Translate API key which is used to generate translations (charge is applicable)",
      "translation": "[optional] your public Google Translate API key which is used to generate translations (charge is applicable)",
      "modified": false
   },
   {
      "id": "a directory with the extracted JSON files, using -output-match-package with -extract-strings this directory should match the input files package name",
      "translation": "a directory with the extracted JSON files, using -output-match-package with -extract-strings this directory should match the input files package name",
      "modified": false
   },
   {
      "id": "An unexpected type of error",
      "translation": "An unexpected type of error",
      "modified": false
   },
   {
      "id": "create-translations",
      "translation": "create-translations",
      "modified": false
   },
   {
      "id": "rewrite-package",
      "translation": "rewrite-package",
      "modified": false
   },
   {
      "id": "a perl-style regular expression for files to ignore, e.g., \".*test.*\"",
      "translation": "a perl-style regular expression for files to ignore, e.g., \".*test.*\"",
      "modified": false
   },
   {
      "id": "prevents any output files from being created",
      "translation": "prevents any output files from being created",
      "modified": false
   },
   {
      "id": "capturing_group.json",
      "translation": "capturing_group.json",
      "modified": false
   },
   {
      "id": "init-code-snippet-filename",
      "translation": "init-code-snippet-filename",
      "modified": false
   },
   {
      "id": "a comma separated list of valid languages with optional territory, e.g., \"en, en_US, fr_FR, es\"",
      "translation": "a comma separated list of valid languages with optional territory, e.g., \"en, en_US, fr_FR, es\"",
      "modified": false
   },
   {
      "id": "i18n-strings-filename",
      "translation": "i18n-strings-filename",
      "modified": false
   },
   {
      "id": "meta",
      "translation": "meta",
      "modified": false
   },
   {
      "id": "recursively extract strings from all files in the same directory as filename or dirName",
      "translation": "recursively extract strings from all files in the same directory as filename or dirName",
      "modified": false
   },
   {
      "id": "checkup",
      "translation": "checkup",
      "modified": false
   },
   {
      "id": "i18n4go: Could not create translation files, err:",
      "translation": "i18n4go: Could not create translation files, err:",
      "modified": false
   },
   {
      "id": "ignore-regexp",
      "translation": "ignore-regexp",
      "modified": false
   },
   {
      "id": "%s\nVersion %s",
      "translation": "%s\nVersion %s",
      "modified": false
   },
   {
      "id": "the source language of the file, typically also part of the file name, e.g., \"en_US\"",
      "translation": "the source language of the file, typically also part of the file name, e.g., \"en_US\"",
      "modified": false
   },
   {
      "id": "generated files are created in directory to match the package name",
      "translation": "generated files are created in directory to match the package name",
      "modified": false
   },
   {
      "id": "generate standard .po file for translation",
      "translation": "generate standard .po file for translation",
      "modified": false
   },
   {
      "id": "dry-run",
      "translation": "dry-run",
      "modified": false
   },
   {
      "id": "root-path",
      "translation": "root-path",
      "modified": false
   },
   {
      "id": "General purpose tool for i18n",
      "translation": "General purpose tool for i18n",
      "modified": false
   },
   {
      "id": "i18n4go: Could not checkup, err:",
      "translation": "i18n4go: Could not checkup, err:",
      "modified": false
   },
   {
      "id": "google-translate-api-key",
      "translation": "google-translate-api-key",
      "modified": false
   },
   {
      "id": "[optional] the path to a file containing the template snippet for the code that is used for go-i18n initialization",
      "translation": "[optional] the path to a file containing the template snippet for the code that is used for go-i18n initialization",
      "modified": false
   },
   {
      "id": "i18n4go: Could not fixup, err:",
      "translation": "i18n4go: Could not fixup, err:",
      "modified": false
   },
   {
      "id": "languages",
      "translation": "languages",
      "modified": false
   },
   {
      "id": "verbose mode where lots of output is generated during execution",
      "translation": "verbose mode where lots of output is generated during execution",
      "modified": false
   },
   {
      "id": "i18n4go: Could not merge strings, err:",
      "translation": "i18n4go: Could not merge strings, err:",
      "modified": false
   }
]
